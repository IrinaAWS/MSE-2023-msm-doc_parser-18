name: Build Project111

on:
  workflow_dispatch:
  push:
    branches: [ dev ]
  pull_request:
    branches: [ dev ]

# jobs:
#   build:

#     runs-on: windows-latest

#     steps:
#     - name: Checkout Repository
#       run: |
#         git clone --branch dev https://github.com/moevm/MSE-2023-msm-doc_parser-18.git
#         cd MSE-2023-msm-doc_parser-18/ParserGUI/
#         (Get-Item .).FullName
#         Get-ChildItem
        

#     - name: Setup .NET
#       uses: actions/setup-dotnet@v3
#       with:
#         dotnet-version: 6.0.x
jobs:
  build-and-test:
    runs-on: windows-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
        with:
          ref: dev
      - name: Setup .NET Framework
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 5.0.x

      - name: Restore NuGet Packages
        run: |
          cd ParserGUI
          nuget restore

      - name: Build Solution
        run: |
          (Get-Item .).FullName
          Get-ChildItem
          cd ParserGUI
          (Get-Item .).FullName
          Get-ChildItem
          $env:Path += ";C:\Program Files\Microsoft Visual Studio\2022\Enterprise\MSBuild\Current\bin"
          msbuild /p:Configuration=Release ParserGUI.sln
          Get-ChildItem -Verbose
          Get-ChildItem -Verbose

#       - name: Run Tests
#         run: |

#           $testResults = 'TestResults.trx'
#           dotnet test ParserGUI.sln /p:CollectCoverage=true /p:CoverletOutputFormat=cobertura /p:CoverletOutput='./' /p:MergeWith='./coverage.xml' /p:Exclude=\"[xunit.*]*\" /p:Logger:trx /p:ResultsDirectory:./ /p:ResultsFile:$testResults /p:Configuration=Release
          
#       - name: Publish Test Results
#         uses: EnricoMi/publish-unit-test-result-action@v1
#         with:
#           testResultsFiles: 'ParserGUI/TestResults*.trx'
#           type: VSTest
#           name: 'MySolution Tests'
#       - name: Create release
#         uses: actions/create-release@v1
#         with:
#           tag_name: v${{ steps.assembly-version.outputs.version }}
#           release_name: Release v${{ steps.assembly-version.outputs.version }}
#           body: |
#             Changes in this release:
#             - ...
#           draft: false
#           prerelease: false
#         env:
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Release
        id: create_release
        uses: zendesk/action-create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
          auto_increment_type: path

      - name: Upload Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ParserGUI\ParserGUI\bin\Release\ParserGUI.exe
          asset_name: ParserGUI.exe
          asset_content_type: application/x-msdownload
